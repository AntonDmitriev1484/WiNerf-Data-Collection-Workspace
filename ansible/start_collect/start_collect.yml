---
- name: Run record_ansible with countdown and SIGINT after duration
  hosts: DataNUCs
  gather_facts: false
  become: false

  vars:
    trial_name: default_trial
    countdown: 10
    duration: 15
    log_dir: "./logs"
    logfile_path: "/tmp/record_ansible_{{ trial_name }}.log"
    ansible_source: "/home/admi3ev/ws/collect/.ansible_source"

  pre_tasks:

    - name: Create logs directory on controller
      delegate_to: localhost
      run_once: true
      file:
        path: "{{ log_dir }}"
        state: directory
        mode: '0755'

    - name: Wait silently before starting
      delegate_to: localhost
      run_once: true
      pause:
        seconds: "{{ countdown }}"

  tasks:

    - name: Start record_ansible with async
      shell: |
        cd ~/ws/collect
        source {{ ansible_source }}
        ./record_ansible.sh "{{ trial_name }}"
      args:
        executable: /bin/bash
      async: 300
      poll: 0
      register: record_job

    - name: Wait for duration before stopping
      pause:
        seconds: "{{ duration }}"

    - name: Send SIGINT to record_ansible.sh process
      shell: |
        pkill -2 -f "record_ansible.sh {{ trial_name }}"
      args:
        executable: /bin/bash
      ignore_errors: true

    - name: Wait for ROS bag process to flush and write metadata
      pause:
        seconds: 10

    - name: Fetch log file from remote node
      fetch:
        src: "{{ logfile_path }}"
        dest: "{{ log_dir }}/{{ inventory_hostname }}_{{ trial_name }}.log"
        flat: true

    - name: Clean up remote log file
      file:
        path: "{{ logfile_path }}"
        state: absent
      ignore_errors: true
